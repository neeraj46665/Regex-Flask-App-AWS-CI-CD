name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}  # Ensure this secret is set
          DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}        # Ensure this secret is set
        run: echo "${DOCKER_HUB_TOKEN}" | docker login -u "${DOCKER_HUB_USERNAME}" --password-stdin

      - name: Build Docker image
        run: docker build -t neeraj46665/regex-app:latest .

      - name: Push Docker image
        run: docker push neeraj46665/regex-app:latest

      - name: Deploy to EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}  # Ensure this secret is set
        run: |
          echo "${SSH_PRIVATE_KEY}" > key.pem
          chmod 600 key.pem

          # SSH into the EC2 instance
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@ec2-13-53-39-239.eu-north-1.compute.amazonaws.com << 'EOF'
            # Pull the Docker image
            docker pull neeraj46665/regex-app:latest

            # Check if the container exists
            if [ "$(docker ps -aq -f name=regex-app)" ]; then
              # Stop and remove the existing container if it exists
              docker stop regex-app
              docker rm regex-app
            fi

            # Run the new container
            docker run -d --name regex-app -p 5000:5000 neeraj46665/regex-app:latest
          EOF
          
          rm key.pem  # Clean up the key file

